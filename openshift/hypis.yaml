apiVersion: apps/v1
kind: Deployment
metadata:
  name: hypis
  labels:
    app: hypis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hypis
  template:
    metadata:
      labels:
        app: hypis
    spec:
      containers:

      - name: hypis-web
        image: hypothesis/hypothesis:latest
        resources:
          requests:
            memory: 96Mi
          limits:
            memory: 128Mi
        command:
        - gunicorn
        args:
        - --paste=conf/app.ini
        - --bind=:5000
        - --name=web
        - --access-logformat='%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" "%({x-forwarded-for}i)s"'
        - --access-logfile=-
        ports:
        - containerPort: 5000
          name: http
        envFrom:
        - secretRef:
            name: hyp-secrets
        env:
        - name: AUTHORITY
          value: clingen-scale
        - name: BROKER_URL
          value: amqp://rabbit:$(RABBITMQ_DEFAULT_PASS)@hyp-mq:$(HYP_MQ_SERVICE_PORT)/
        - name: DATABASE_URL
          value: postgresql://postgres:$(POSTGRES_PASSWORD)@hyp-db/postgres
        - name: ELASTICSEARCH_URL
          value: http://hyp-es:9200
        - name: PROXY_AUTH
          value: 'True'

      - name: hypis-ws
        image: hypothesis/hypothesis:latest
        resources:
          requests:
            memory: 96Mi
          limits:
            memory: 128Mi
        command:
        - gunicorn
        args:
        - --paste=conf/websocket.ini
        - --bind=:5001
        - --worker-class=h.streamer.Worker
        - --graceful-timeout=0
        - --name=websocket
        - --worker-connections=4096
        ports:
        - containerPort: 5001
          name: ws
        volumeMounts:
        - name: hypis-conf
          mountPath: "/var/lib/hypothesis/conf"
        envFrom:
        - secretRef:
            name: hyp-secrets
        env:
        - name: AUTHORITY
          value: clingen-scale
        - name: BROKER_URL
          value: amqp://rabbit:$(RABBITMQ_DEFAULT_PASS)@hyp-mq:$(HYP_MQ_SERVICE_PORT)/
        - name: DATABASE_URL
          value: postgresql://postgres:$(POSTGRES_PASSWORD)@hyp-db/postgres
        - name: ELASTICSEARCH_URL
          value: http://hyp-es:9200
        - name: PROXY_AUTH
          value: 'True'

      - name: hypis-worker
        image: hypothesis/hypothesis:latest
        resources:
          requests:
            memory: 384Mi
          limits:
            memory: 512Mi
        command:
        - bin/hypothesis
        args:
        - celery
        - worker
        - "--loglevel=INFO"
        volumeMounts:
        - name: hypis-conf
          mountPath: "/var/lib/hypothesis/conf"
        envFrom:
        - secretRef:
            name: hyp-secrets
        env:
        - name: AUTHORITY
          value: clingen-scale
        - name: BROKER_URL
          value: amqp://rabbit:$(RABBITMQ_DEFAULT_PASS)@hyp-mq:$(HYP_MQ_SERVICE_PORT)/
        - name: DATABASE_URL
          value: postgresql://postgres:$(POSTGRES_PASSWORD)@hyp-db/postgres
        - name: ELASTICSEARCH_URL
          value: http://hyp-es:9200

      volumes:
      - name: hypis-conf
        configMap:
          name: hypis-conf
---
apiVersion: v1
kind: Service
metadata:
  name: hypis
spec:
  selector:
    app: hypis
  ports:
    - protocol: TCP
      port: 5000
      name: http
    - protocol: TCP
      port: 5001
      name: ws
